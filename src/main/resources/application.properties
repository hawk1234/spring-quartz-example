## Server Properties
server.port=${APP_SERVER_PORT:8080}
logging.config=${APP_LOG_CONFIG:file:config/log4j2.xml}

## Application DB Properties
com.mz.example.app-db.url=${APP_DATABASE_URL:jdbc:h2:mem:db}
com.mz.example.app-db.username=${APP_DATABASE_USER:user}
com.mz.example.app-db.password=${APP_DATABASE_PASSWORD:p4ssword}
com.mz.example.app-db.driver-class-name=${APP_DATABASE_DRIVER:org.h2.Driver}
#com.mz.example.app-db.jndiName=
spring.jpa.properties.hibernate.default_schema=${APP_DATABASE_SCHEMA:}
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=update

## Quartz Properties
spring.quartz.job-store-type=jdbc
#available values:
#   always - Always initialize datasource
#   embedded - Only initialize embedded datasource
#   never - Do not initialize datasource
spring.quartz.jdbc.initialize-schema=never
#Define that multiple instances of this application will use the same data store.
spring.quartz.properties.org.quartz.jobStore.isClustered=true
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
## Quartz DB Properties
#Quartz does not support ds schema if possible its best to pass schema in connection url.
# You can also HACK a bit with org.quartz.jobStore.tablePrefix
com.mz.example.scheduler-db.url=${SCHEDULER_DATABASE_URL:jdbc:h2:mem:db}
com.mz.example.scheduler-db.username=${SCHEDULER_DATABASE_USER:user}
com.mz.example.scheduler-db.password=${SCHEDULER_DATABASE_PASSWORD:p4ssword}
com.mz.example.scheduler-db.driver-class-name=${SCHEDULER_DATABASE_DRIVER:org.h2.Driver}
#com.mz.example.scheduler-db.jndiName=

## Job history retention policy
com.mz.example.job-history.days-to-expiry=${JOB_STATUS_EXPIRY_DAYS:30}

